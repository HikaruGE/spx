module utils/debug

imports
	common

strategies
	enable-debug-all  = rules ( DebugAll: _ )

	disable-debug-all  = rules ( DebugAll:- _ )

strategies

	enable-stratego-debugging  = rules(DebugStr: x -> x)

	disable-stratego-debugging = rules(DebugStr:- _ )

	debug-str = not(DebugStr) <+ debug

strategies

	enable-sdf-debugging  = rules(DebugSDF: _)

	disable-sdf-debugging = rules(DebugSDF:- _ )

	// Debug switches
	enable-declaration-debugging  = rules(DebugDeclaration: x -> x)

	disable-declaration-debugging = rules(DebugDeclaration:- _ )

	debug-declaration(| site, type) = not(DebugDeclaration <+ DebugAll)  <+ <debug>$[ $[$ Declaration | [site] | [type] $]$ [<id>]]



	// Debug switches  for symbol table
	enable-symboltable-debugging  = rules(DebugSymbolTable: x -> x)

	disable-symboltable-debugging = rules(DebugSymbolTable:- _ )

	debug-symboltable = not(DebugSymbolTable <+ DebugAll)  <+ debug(!"[ SymbolTable | ")


  // Debug switches for semantic analysis
	enable-semantic-analysis-debugging = rules(DebugSemanticAnalysis: x -> x)

	disable-semantic-analysis-debugging = rules(DebugSemanticAnalysis:- _ )

	debug-analysis = not(DebugSemanticAnalysis <+ DebugAll)  <+ debug(!"[ SemanticAnalysis | ")


 	// Debug switches for compile
	enable-compiler-debugging  = rules(DebugCompiler: x -> x)

	disable-compiler-debugging = rules(DebugCompiler:- _ )

	debug-compiler = not(DebugCompiler <+ DebugAll)  <+ debug(!"[ Compiler | ")


  // Debug switches for TemplateLang
  debug-templatelang = debug(!"[ TemplateLang | ")

 rules

 	debug-time(s|msg) =
      where(starttime := <times>)
    ; s
    ; where(
          total := <diff-times> (<times>,starttime)
        ; t1 := <self-children-user-time; ticks-to-seconds; real-to-string(|3)> total
        ; str := <concat-strings> [msg, ": ", t1, " s"]
        ; debug
      )

rules
	throw-unable-read-exception(|message) = debug(!message);fail
	throw-unable-read-file = debug(!"unable to read file : ")

rules
	throw-precompile-exception = debug(!"Could not precompile: "); fail
	throw-invalid-argument-exception(|strategy-name) = <debug>$[invalid argument at [strategy-name] : [<pp-aterm><id>]]; fail


