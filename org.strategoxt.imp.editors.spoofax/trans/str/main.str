module str/main
imports
	libstrc
imports 
  lib/editor-common.generated
imports   
  context/str/declare
  analyze/str/check
  codegen/str/to-stratego

rules
  editor-analyze-str:
    (ast, path, project-path) -> ( errors, warnings, [])
    with
      if NoAnalysis then
        errors   := <collect-all(constraint-error, conc)> ast;
        warnings := <collect-all(constraint-warning, conc)> ast
      else
        if WarnAnalysis then
          errors   := <collect-all(constraint-error, conc)> ast;
          warnings := <collect-all(global-constraint-error + constraint-warning, conc)> ast
        else
          errors   := <collect-all(global-constraint-error + constraint-error, conc)> ast;
          warnings := <collect-all(constraint-warning, conc)> ast
        end
      end
rules 

	//Generate Stratego Definition from SPX
  /*
  generate-str:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"str")> path;
      result   := <pp-stratego-string> <parenthesize-Stratego> <to-str> (path, selected)

	*/
	
	generate-str:
    (selected, position, ast, path, project-path) -> None()
    with
      filename := <guarantee-extension(|"str")> path;
      <to-str-all> (selected, path , project-path)
