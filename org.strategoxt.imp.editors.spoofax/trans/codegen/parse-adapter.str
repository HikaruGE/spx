module codegen/parse-adapter

imports
	include/SpoofaxLang
	context/signatures
	normalize/signatures
	lib/Configuration/SpoofaxConfiguration  
	lib/editor-common.generated
imports 
	codegen/sdf/parse
	codegen/str/parse
	codegen/-
imports
	utils/path
	utils/debug
	utils/cache	
	config
	common
rules
	parse-spx-sources : 
		(sourcedir , searchOption) -> <id>
		where
			{| current-working-root-dir :  
				rules(
					current-working-root-dir  := <getcwd>
				);
				<chdir>sourcedir;
				<parse-spx-compilationUnits(|searchOption)> <getcwd>;
				<chdir> <current-working-root-dir>
			|}
		
	parse-spx-compilationUnits(|search-option) = 
		readdir;
		list-loop(
    	if <isdir> <filemode> then  //FIXME : filemode / isdir contains bug. Common folder is not considered as directory which is a bug
    		if not(Ignored-Spx-Souce-Dir); !search-option => AllDirectories()  then
       		 chdir;
        	 <parse-spx-compilationUnits(|search-option)<+ throw-unable-read-exception(|"Failed to read this directory : ")><getcwd>;
           <chdir> ".."
        end
      else
        where(parse-spx-compilationUnit) <+ throw-unable-read-file 
      end
    )
    
 	parse-spx-compilationUnit: filename -> <id>
 		where
 			if has-extension(|"spx") then 
	 			where (<debug-compiler>$[Pre-Compiling| Parsing following file : [<pp-aterm>]]); 
	 			open-spx-compilation-unit(
					spx-compilation-unit-path, 
					spx-precompiled-cache-path, 
					parse-spoofaxlang-file ,
					pre-complile-compilation-unit
				)
			end 

	
rules
	
	parse-legacy-artifact: 
		resolved-path-> parsed-string
		where 
			has-extension(|"sdf") + has-extension(|"def")
		where 
			parsed-string:= <parse-sdf-file>resolved-path
	
	
	parse-legacy-artifact: 
		resolved-path -> parsed-string
		where 
			has-extension(|"str")
		where 
			parsed-string:= <parse-stratego>resolved-path
	
	
	parse-legacy-artifact: 
		resolved-path -> parsed-string
		where 
			has-extension(|"rtree") 
		where 
			parsed-string:= <ReadFromFile>resolved-path
	    