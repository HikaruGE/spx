module sdf/to-sdf

imports
  libstratego-lib
  libstratego-gpp
  libstratego-sglr
  libstratego-sdf
imports
	include/SpoofaxLang
	lib/editor-common.generated
  lib/sdf-desugar
  lib/sdf-parenthesize  
imports 
	sdf/analysis  
imports 
	common
	spoofaxlang
	
      
rules
  /**
  * Converting def to SDF definition. 
  **/
  to-sdf:
    (path, def) -> 'module(name, [sdf-import-stmt*], [exports(sections')])
    with
      name := <find-spoofax-module-name-str>(path, def)
      ;import-stmt* := <collect-om(?Imports(<id>) , conc);flatten-list;make-set> def
      ;sdf-import-stmt* := 'imports( <map(spximport-to-sdfimport)>import-stmt* )
      ;sections  := <collect-om(?SDFSection(<id>) + ?SDFSectionEH(_, <id>), conc)> def
      ;sections' := <alltd(desugar-sdf-redux)> <list-to-conc-grammars> sections
		
  // TODO: also support {"Module(<2>, <1>)"}
  desugar-sdf-redux:
    term(default(fun(quoted(s)))) ->
    term(default(appl(unquoted("cons"), [fun(quoted(s))])))
  
  list-to-conc-grammars:
    [g1, g2 | gs] -> conc-grammars(g1, <list-to-conc-grammars> [g2 | gs])
  
  list-to-conc-grammars:
    [g1] -> g1
  
  list-to-conc-grammars:
    [] -> []
    
rules 
	/**
	* Converts import statements of SPX to import statements of SDF
	**/
	spximport-to-sdfimport :  
			Import(Name( package-name) ) -> 'module( unparameterized(package-name))