module sdf/to-sdf

imports
  libstratego-lib
  libstratego-gpp
  libstratego-sglr
  libstratego-sdf
  include/SpoofaxLang
  lib/editor-common.generated
  lib/sdf-desugar
  lib/sdf-parenthesize
  spoofaxlang

rules

  to-sdf:
    (path, def) -> 'module(name', [], [exports(sections')])
    with
      name := <find-spoofax-module-name>;
      if !name => ParamName(n, p) then
        name' := parameterized(n, p)
      else
        Name(name') := name
      end;
      sections  := <collect-om(?SDFSection(<id>) + ?SDFSectionEH(_, <id>), conc)> def;
      sections' := <alltd(desugar-sdf-redux)> <list-to-conc-grammars> sections
  
  // TODO: also support {"Module(<2>, <1>)"}
  desugar-sdf-redux:
    term(default(fun(quoted(s)))) ->
    term(default(appl(unquoted("cons"), [fun(quoted(s))])))
  
  list-to-conc-grammars:
    [g1, g2 | gs] -> conc-grammars(g1, <list-to-conc-grammars> [g2 | gs])
  
  list-to-conc-grammars:
    [g1] -> g1
  
  list-to-conc-grammars:
    [] -> []
