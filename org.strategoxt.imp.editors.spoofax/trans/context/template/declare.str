module context/template/declare

imports
  context/sdf/declare
  include/SpoofaxLang
  utils/annotations

signature
  constructors
    // Options
    Newlines : X
    KeywordFollowRestriction : X

strategies

  /** @type List(TemplateProduction) -> List(TemplateProduction) */
  declare-template-definition-main = map(declare-template-definition)

  /** @type List(TemplateOption) -> List(TemplateOption) */
  declare-template-options-main = map(declare-template-option)

  init-template-options =
    // defaults
    rules(
      Options :+ Newlines() -> None()
      Options :+ KeywordFollowRestriction() -> None()
    )

rules

  // Declarations are shared with SDF (same DR)
  // The sorts and cons declared using templates are in exactly the same
  // namespace as if they would be declared using an equivalent piece of SDF.

  declare-template-definition:
    prod @ TemplateProduction(sort, template, attrs) -> <id>
    with
      <declare-sdf-definition-internal> (prod, template, sort, attrs)
    // with
    //   if not(<collect-one(?sdf-cons(<un-double-quote>))> attrs);
    //      <collect-one(?bracket())> attrs then
    //     rules(BracketTemplateProduction :+ sort -> template)
    //   end

rules

  // Invoked by declare-sdf-definition-internal
  declare-sdf-usage:
    Placeholder(_, sort(x), _, _) -> <id>
    with
      rules(Usage: x -> x)

rules // Options
  // FIXME: move to spoofax.configuration

  declare-template-option:
    Newlines(t) -> <id>
    with
      rules(Options :+ Newlines() -> t)

  declare-template-option:
  	KeywordFollowRestriction(t) -> <id>
  	with
  		rules(Options :+ KeywordFollowRestriction() -> t)
